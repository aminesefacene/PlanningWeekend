{"ast":null,"code":"import _classCallCheck from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/src/components/connectionForm.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { connectUser as _connectUser, getUserActivities as _getUserActivities, getUserRegions as _getUserRegions, getAllActivities as _getAllActivities, getAllRegions as _getAllRegions } from '../actions/actions';\nimport { User } from '../user';\nimport { ConnectedActivityList } from './activityList';\nimport { ConnectedRegionList } from './regionList';\n\nvar axios = require('axios');\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getId: function (_getId) {\n      function getId(_x) {\n        return _getId.apply(this, arguments);\n      }\n\n      getId.toString = function () {\n        return _getId.toString();\n      };\n\n      return getId;\n    }(function (id) {\n      return dispatch(getId(id));\n    }),\n    connectUser: function connectUser(user) {\n      return dispatch(_connectUser(user));\n    },\n    getUserActivities: function getUserActivities(activities) {\n      return dispatch(_getUserActivities(activities));\n    },\n    getUserRegions: function getUserRegions(regions) {\n      return dispatch(_getUserRegions(regions));\n    },\n    getAllActivities: function getAllActivities(allActivities) {\n      return dispatch(_getAllActivities(allActivities));\n    },\n    getAllRegions: function getAllRegions(allRegions) {\n      return dispatch(_getAllRegions(allRegions));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    id: state.id,\n    user: state.user\n  };\n};\n\nvar ConnectionForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConnectionForm, _React$Component);\n\n  function ConnectionForm(props) {\n    var _this;\n\n    _classCallCheck(this, ConnectionForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectionForm).call(this, props));\n\n    _this.getAllLists = function () {\n      var url = 'http://localhost:8080/user/getUser/' + _this.props.id;\n      axios.get(url).then(function (response) {\n        return _this.props.getUserActivities(response.data.activities);\n      });\n      axios.get(url).then(function (response) {\n        return _this.props.getUserRegions(response.data.regions);\n      });\n      var urlAllActivities = 'http://localhost:8080/activity/getAll';\n      axios.get(urlAllActivities).then(function (response) {\n        return _this.props.getAllActivities(response.data);\n      });\n      var urlAllRegions = 'http://localhost:8080/region/getAll';\n      axios.get(urlAllRegions).then(function (response) {\n        return _this.props.getAllRegions(response.data);\n      });\n    };\n\n    _this.connectionUser = function () {\n      var url = 'http://localhost:8080/user/getUserByLogin/' + _this.state.login + '/' + _this.state.password;\n      axios.get(url).then(function (response) {\n        return console.log(response.data);\n      });\n\n      if (_this.state.id === -1) {\n        _this.props.connectUser(undefined);\n      } else {\n        var user = new User(_this.state.login, _this.state.password);\n\n        _this.getAllLists();\n\n        _this.props.connectUser(user);\n      }\n    };\n\n    _this.deconnectionUser = function () {\n      _this.props.connectUser(undefined);\n    };\n\n    _this.state = {\n      login: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(ConnectionForm, [{\n    key: \"handleChangeLogin\",\n    value: function handleChangeLogin(event) {\n      this.setState({\n        login: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangePassword\",\n    value: function handleChangePassword(event) {\n      this.setState({\n        password: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.user !== undefined) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Bienvenue, \", this.state.login), React.createElement(\"button\", {\n          onClick: this.deconnectionUser.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"logout\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"ConnectedActivityList brbr ConnectedRegionList\"));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"login\",\n          onChange: this.handleChangeLogin.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        })), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          onChange: this.handleChangePassword.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          onClick: this.connectionUser.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"login\"));\n      }\n    }\n  }]);\n\n  return ConnectionForm;\n}(React.Component);\n\nvar ConnectedConnectionForm = connect(mapStateToProps, mapDispatchToProps)(ConnectionForm);\nexport { ConnectedConnectionForm };","map":{"version":3,"sources":["/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/src/components/connectionForm.js"],"names":["React","connect","connectUser","getUserActivities","getUserRegions","getAllActivities","getAllRegions","User","ConnectedActivityList","ConnectedRegionList","axios","require","mapDispatchToProps","dispatch","getId","id","user","activities","regions","allActivities","allRegions","mapStateToProps","state","ConnectionForm","props","getAllLists","url","get","then","response","data","urlAllActivities","urlAllRegions","connectionUser","login","password","console","log","undefined","deconnectionUser","event","setState","target","value","bind","handleChangeLogin","handleChangePassword","Component","ConnectedConnectionForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { connectUser, getUserActivities, getUserRegions, getAllActivities, getAllRegions } from '../actions/actions'\nimport { User } from '../user'\nimport { ConnectedActivityList } from './activityList'\nimport { ConnectedRegionList } from './regionList'\nconst axios = require('axios');\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getId: id => dispatch(getId(id)),\n    connectUser: user => dispatch(connectUser(user)),\n    getUserActivities: activities => dispatch(getUserActivities(activities)),\n    getUserRegions: regions => dispatch(getUserRegions(regions)),\n    getAllActivities: allActivities => dispatch(getAllActivities(allActivities)),\n    getAllRegions: allRegions => dispatch(getAllRegions(allRegions))\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    id: state.id,\n    user: state.user\n  }\n}\n\nclass ConnectionForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {login: '', password: '' };\n    }\n\n    handleChangeLogin(event) {\n        this.setState({login: event.target.value});\n    }\n\n    handleChangePassword(event) {\n        this.setState({password: event.target.value});\n    }\n\n    getAllLists = () => {\n      let url = 'http://localhost:8080/user/getUser/'+this.props.id;\n      axios.get(url).then(response => this.props.getUserActivities(response.data.activities));\n      axios.get(url).then(response => this.props.getUserRegions(response.data.regions));\n      let urlAllActivities = 'http://localhost:8080/activity/getAll';\n      axios.get(urlAllActivities).then(response => this.props.getAllActivities(response.data));\n      let urlAllRegions = 'http://localhost:8080/region/getAll';\n      axios.get(urlAllRegions).then(response => this.props.getAllRegions(response.data));\n    }\n\n    connectionUser = () => {\n      let url = 'http://localhost:8080/user/getUserByLogin/'+this.state.login+'/'+this.state.password;\n      axios.get(url).then(response => console.log(response.data));\n      if(this.state.id===-1){\n        this.props.connectUser(undefined);\n      }else{\n        let user = new User(this.state.login, this.state.password);\n        this.getAllLists();\n        this.props.connectUser(user);\n      }\n    }\n\n    deconnectionUser = () => {\n      this.props.connectUser(undefined);\n    }\n  \n    render() {\n      if(this.props.user!==undefined){\n        return <div><p>Bienvenue, {this.state.login}</p>\n        <button onClick={this.deconnectionUser.bind(this)}>logout</button>\n        <br/><br/>\n        <p>ConnectedActivityList\n        brbr\n        ConnectedRegionList</p>\n        </div>\n      }else{\n        return (\n          <div>\n          <label>\n            <input type=\"text\" placeholder=\"login\" onChange={this.handleChangeLogin.bind(this)} />\n          </label>\n          <label>\n            <input type=\"password\" placeholder=\"password\" onChange={this.handleChangePassword.bind(this)} />\n          </label>\n          <button onClick={this.connectionUser.bind(this)}>login</button>\n          </div>\n        );\n      }\n    }\n}\n\nconst ConnectedConnectionForm = connect(mapStateToProps, mapDispatchToProps)(ConnectionForm);\n\nexport {\n  ConnectedConnectionForm\n}\n"]},"metadata":{},"sourceType":"module"}