{"ast":null,"code":"import _classCallCheck from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/src/components/connectionForm.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { connectUser as _connectUser } from '../actions/actions';\nimport { User } from '../user';\nimport { ConnectedActivityList } from './activityList';\n\nvar axios = require('axios');\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    connectUser: function connectUser(user) {\n      return dispatch(_connectUser(user));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar ConnectionForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConnectionForm, _React$Component);\n\n  function ConnectionForm(props) {\n    var _this;\n\n    _classCallCheck(this, ConnectionForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectionForm).call(this, props));\n\n    _this.connectionUser = function () {\n      //faire en sorte que le state de l'appli ai un user et que app.js renvoie\n      //la page de connection ou la page de l'utilisateur connectÃ© celon ce state\n      var user = new User(_this.state.login, _this.state.password);\n\n      _this.props.connectUser(user);\n\n      _this.testConnectionApi();\n    };\n\n    _this.deconnectionUser = function () {\n      _this.props.connectUser(undefined);\n    };\n\n    _this.testConnectionApi = function () {\n      var url = 'http://localhost:8080/activity/test'; //console.log(axios.get(url));\n\n      var res = axios.get(url).then(function (response) {\n        return _this.setState({\n          test: response.data\n        });\n      }); //console.log(res);\n    };\n\n    _this.state = {\n      login: '',\n      password: '',\n      test: ''\n    };\n    return _this;\n  }\n\n  _createClass(ConnectionForm, [{\n    key: \"handleChangeLogin\",\n    value: function handleChangeLogin(event) {\n      this.setState({\n        login: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangePassword\",\n    value: function handleChangePassword(event) {\n      this.setState({\n        password: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.user !== undefined) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, this.state.test, \", \", this.state.login), React.createElement(\"button\", {\n          onClick: this.deconnectionUser.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"logout\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), React.createElement(ConnectedActivityList, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"login\",\n          onChange: this.handleChangeLogin.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        })), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          onChange: this.handleChangePassword.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          onClick: this.connectionUser.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"login\"));\n      }\n    }\n  }]);\n\n  return ConnectionForm;\n}(React.Component);\n\nvar ConnectedConnectionForm = connect(mapStateToProps, mapDispatchToProps)(ConnectionForm);\nexport { ConnectedConnectionForm };","map":{"version":3,"sources":["/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/src/components/connectionForm.js"],"names":["React","connect","connectUser","User","ConnectedActivityList","axios","require","mapDispatchToProps","dispatch","user","mapStateToProps","state","ConnectionForm","props","connectionUser","login","password","testConnectionApi","deconnectionUser","undefined","url","res","get","then","response","setState","test","data","event","target","value","bind","handleChangeLogin","handleChangePassword","Component","ConnectedConnectionForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { connectUser } from '../actions/actions'\nimport { User } from '../user'\nimport { ConnectedActivityList } from './activityList'\nconst axios = require('axios');\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    connectUser: user => dispatch(connectUser(user))\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nclass ConnectionForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { login: '', password: '', test: '' };\n    }\n\n    handleChangeLogin(event) {\n        this.setState({login: event.target.value});\n    }\n\n    handleChangePassword(event) {\n        this.setState({password: event.target.value});\n    }\n\n    connectionUser = () => {\n        //faire en sorte que le state de l'appli ai un user et que app.js renvoie\n        //la page de connection ou la page de l'utilisateur connectÃ© celon ce state\n        let user = new User(this.state.login, this.state.password);\n        this.props.connectUser(user);\n        this.testConnectionApi();\n    }\n\n    deconnectionUser = () => {\n      this.props.connectUser(undefined);\n    }\n\n    testConnectionApi = () => {\n      let url = 'http://localhost:8080/activity/test';\n      //console.log(axios.get(url));\n      let res = axios.get(url).then(response => this.setState({test: response.data}));\n      //console.log(res);\n    }\n  \n    render() {\n      if(this.props.user!==undefined){\n        return <div><p>{this.state.test}, {this.state.login}</p>\n        <button onClick={this.deconnectionUser.bind(this)}>logout</button>\n        <br/><br/>\n        <ConnectedActivityList/>\n        </div>\n      }else{\n        return (\n          <div>\n          <label>\n            <input type=\"text\" placeholder=\"login\" onChange={this.handleChangeLogin.bind(this)} />\n          </label>\n          <label>\n            <input type=\"password\" placeholder=\"password\" onChange={this.handleChangePassword.bind(this)} />\n          </label>\n          <button onClick={this.connectionUser.bind(this)}>login</button></div>\n        );\n      }\n    }\n}\n\nconst ConnectedConnectionForm = connect(mapStateToProps, mapDispatchToProps)(ConnectionForm);\n\nexport {\n  ConnectedConnectionForm\n}\n"]},"metadata":{},"sourceType":"module"}