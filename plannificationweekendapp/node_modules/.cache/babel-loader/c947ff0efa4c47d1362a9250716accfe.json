{"ast":null,"code":"import _classCallCheck from \"/home/miola/planificationweekendapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/miola/planificationweekendapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/miola/planificationweekendapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/miola/planificationweekendapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/miola/planificationweekendapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/miola/planificationweekendapp/src/components/connectionForm.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { connectUser as _connectUser } from '../actions/actions';\nimport { User } from '../user';\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    connectUser: function connectUser(user) {\n      return dispatch(_connectUser(user));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar ConnectionForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConnectionForm, _React$Component);\n\n  function ConnectionForm(props) {\n    var _this;\n\n    _classCallCheck(this, ConnectionForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectionForm).call(this, props));\n\n    _this.connectionUser = function () {\n      //faire en sorte que le state de l'appli ai un user et que app.js renvoie\n      //la page de connection ou la page de l'utilisateur connecté celon ce state\n      var user = new User(_this.state.login, _this.state.password);\n\n      _this.props.connectUser(user);\n    };\n\n    _this.deconnectionUser = function () {\n      _this.props.connectUser(undefined);\n    };\n\n    _this.testConnectionApi = function () {\n      /*fetch(\"http://localhost:8080/activity/create\").then(Response => {\n        console.log(Response.body);\n        return Response;\n      })*/\n      var Http = new XMLHttpRequest();\n      var url = 'http://localhost:8080/activity/test';\n      Http.open(\"GET\", url);\n      Http.send();\n\n      Http.onreadystatechange = function (e) {\n        console.log(Http.responseText);\n      };\n    };\n\n    _this.state = {\n      login: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(ConnectionForm, [{\n    key: \"handleChangeLogin\",\n    value: function handleChangeLogin(event) {\n      this.setState({\n        login: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangePassword\",\n    value: function handleChangePassword(event) {\n      this.setState({\n        password: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.user !== undefined) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, this.testConnectionApi(), \", \", this.state.login), React.createElement(\"button\", {\n          onClick: this.deconnectionUser.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"logout\"));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"login\",\n          onChange: this.handleChangeLogin.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        })), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          onChange: this.handleChangePassword.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          onClick: this.connectionUser.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"login\"));\n      }\n    }\n  }]);\n\n  return ConnectionForm;\n}(React.Component);\n\nvar ConnectedConnectionForm = connect(mapStateToProps, mapDispatchToProps)(ConnectionForm);\nexport { ConnectedConnectionForm };","map":{"version":3,"sources":["/home/miola/planificationweekendapp/src/components/connectionForm.js"],"names":["React","connect","connectUser","User","mapDispatchToProps","dispatch","user","mapStateToProps","state","ConnectionForm","props","connectionUser","login","password","deconnectionUser","undefined","testConnectionApi","Http","XMLHttpRequest","url","open","send","onreadystatechange","e","console","log","responseText","event","setState","target","value","bind","handleChangeLogin","handleChangePassword","Component","ConnectedConnectionForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { connectUser } from '../actions/actions'\nimport { User } from '../user'\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    connectUser: user => dispatch(connectUser(user))\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nclass ConnectionForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { login: '', password: '' };\n    }\n\n    handleChangeLogin(event) {\n        this.setState({login: event.target.value});\n    }\n\n    handleChangePassword(event) {\n        this.setState({password: event.target.value});\n    }\n\n    connectionUser = () => {\n        //faire en sorte que le state de l'appli ai un user et que app.js renvoie\n        //la page de connection ou la page de l'utilisateur connecté celon ce state\n        let user = new User(this.state.login, this.state.password);\n        this.props.connectUser(user);\n    }\n\n    deconnectionUser = () => {\n      this.props.connectUser(undefined);\n    }\n\n    testConnectionApi = () => {\n      /*fetch(\"http://localhost:8080/activity/create\").then(Response => {\n        console.log(Response.body);\n        return Response;\n      })*/\n      const Http = new XMLHttpRequest();\n      const url='http://localhost:8080/activity/test';\n      Http.open(\"GET\", url);\n      Http.send();\n      Http.onreadystatechange=(e)=>{\n        console.log(Http.responseText)\n      }\n    }\n  \n    render() {\n      if(this.props.user!==undefined){\n        return <div><p>{this.testConnectionApi()}, {this.state.login}</p><button onClick={this.deconnectionUser.bind(this)}>logout</button></div>\n      }else{\n        return (\n          <div>\n          <label>\n            <input type=\"text\" placeholder=\"login\" onChange={this.handleChangeLogin.bind(this)} />\n          </label>\n          <label>\n            <input type=\"password\" placeholder=\"password\" onChange={this.handleChangePassword.bind(this)} />\n          </label>\n          <button onClick={this.connectionUser.bind(this)}>login</button></div>\n        );\n      }\n    }\n}\n\nconst ConnectedConnectionForm = connect(mapStateToProps, mapDispatchToProps)(ConnectionForm);\n\nexport {\n  ConnectedConnectionForm\n}\n"]},"metadata":{},"sourceType":"module"}