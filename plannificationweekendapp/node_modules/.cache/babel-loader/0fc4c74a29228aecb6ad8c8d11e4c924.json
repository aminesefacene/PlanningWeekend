{"ast":null,"code":"import _classCallCheck from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/src/components/connectionForm.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { getId as _getId, connectUser as _connectUser, getUserActivities as _getUserActivities, getUserRegions as _getUserRegions, getAllActivities as _getAllActivities, getAllRegions as _getAllRegions } from '../actions/actions';\nimport { User } from '../user';\nimport { ConnectedActivityList } from './activityList';\nimport { ConnectedRegionList } from './regionList';\n\nvar axios = require('axios');\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getId: function getId(id) {\n      return dispatch(_getId(id));\n    },\n    connectUser: function connectUser(user) {\n      return dispatch(_connectUser(user));\n    },\n    getUserActivities: function getUserActivities(activities) {\n      return dispatch(_getUserActivities(activities));\n    },\n    getUserRegions: function getUserRegions(regions) {\n      return dispatch(_getUserRegions(regions));\n    },\n    getAllActivities: function getAllActivities(allActivities) {\n      return dispatch(_getAllActivities(allActivities));\n    },\n    getAllRegions: function getAllRegions(allRegions) {\n      return dispatch(_getAllRegions(allRegions));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    id: state.id,\n    user: state.user\n  };\n};\n\nvar ConnectionForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConnectionForm, _React$Component);\n\n  function ConnectionForm(props) {\n    var _this;\n\n    _classCallCheck(this, ConnectionForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectionForm).call(this, props));\n\n    _this.getAllLists = function () {\n      var url = 'http://localhost:8080/user/getUser/' + _this.props.id;\n      axios.get(url).then(function (response) {\n        return _this.props.getUserActivities(response.data.activities);\n      });\n      axios.get(url).then(function (response) {\n        return _this.props.getUserRegions(response.data.regions);\n      });\n      var urlAllActivities = 'http://localhost:8080/activity/getAll';\n      axios.get(urlAllActivities).then(function (response) {\n        return _this.props.getAllActivities(response.data);\n      });\n      var urlAllRegions = 'http://localhost:8080/region/getAll';\n      axios.get(urlAllRegions).then(function (response) {\n        return _this.props.getAllRegions(response.data);\n      });\n    };\n\n    _this.connectionUser = function () {\n      if (_this.state.login === '' || _this.state.login === '') {//ne fait rien si l'utilisateur ne saisi pas de login ou de mot de passe\n      } else {\n        var url = 'http://localhost:8080/user/getUserByLogin/' + _this.state.login + '/' + _this.state.password;\n        axios.get(url).then(function (response) {\n          return _this.waitConnectionUser(response.data);\n        });\n      }\n    };\n\n    _this.createUser = function () {\n      var newUser = {\n        \"username\": _this.setState.login,\n        \"password\": _this.state.login,\n        \"mail\": _this.state.mailAddress,\n        \"roles\": [],\n        \"activities\": [],\n        \"regions\": []\n      };\n      axios.post({\n        method: 'POST',\n        url: 'http://localhost:8080/user/create',\n        headers: {\n          'Access-Control-Allow-Credentials': true\n        }\n      }, newUser).then(function (res) {\n        return console.log(res.data);\n      });\n    };\n\n    _this.deconnectionUser = function () {\n      _this.state.login = '';\n      _this.state.password = '';\n\n      _this.props.connectUser(undefined);\n    };\n\n    _this.state = {\n      login: '',\n      password: '',\n      newLogin: '',\n      newPassword: '',\n      mailAddress: ''\n    };\n    return _this;\n  }\n\n  _createClass(ConnectionForm, [{\n    key: \"handleChangeLogin\",\n    value: function handleChangeLogin(event) {\n      this.setState({\n        login: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangePassword\",\n    value: function handleChangePassword(event) {\n      this.setState({\n        password: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeNewLogin\",\n    value: function handleChangeNewLogin(event) {\n      this.setState({\n        newLogin: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeNewPassword\",\n    value: function handleChangeNewPassword(event) {\n      this.setState({\n        newPassword: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeMailAddress\",\n    value: function handleChangeMailAddress(event) {\n      this.setState({\n        mailAddress: event.target.value\n      });\n    }\n  }, {\n    key: \"waitConnectionUser\",\n    value: function waitConnectionUser(data) {\n      //fonction permettant d'attendre le r√©sultat de la promesse avant de changer l'affichage\n      this.props.getId(data);\n\n      if (this.props.id === -1) {\n        this.props.connectUser(undefined);\n      } else {\n        var user = new User(this.state.login, this.state.password);\n        this.getAllLists();\n        this.props.connectUser(user);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.user !== undefined) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Bienvenue, \", this.state.login), React.createElement(\"button\", {\n          onClick: this.deconnectionUser.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"logout\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }), React.createElement(ConnectedActivityList, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), React.createElement(ConnectedRegionList, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"Connexion\"), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"login\",\n          onChange: this.handleChangeLogin.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        })), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          onChange: this.handleChangePassword.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          onClick: this.connectionUser.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"login\"), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"Registration\"), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"login\",\n          onChange: this.handleChangeNewLogin.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        })), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          onChange: this.handleChangeNewPassword.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        })), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"test\",\n          placeholder: \"mail address\",\n          onChange: this.handleChangeMailAddress.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          onClick: this.createUser.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"register\"));\n      }\n    }\n  }]);\n\n  return ConnectionForm;\n}(React.Component);\n\nvar ConnectedConnectionForm = connect(mapStateToProps, mapDispatchToProps)(ConnectionForm);\nexport { ConnectedConnectionForm };","map":{"version":3,"sources":["/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/src/components/connectionForm.js"],"names":["React","connect","getId","connectUser","getUserActivities","getUserRegions","getAllActivities","getAllRegions","User","ConnectedActivityList","ConnectedRegionList","axios","require","mapDispatchToProps","dispatch","id","user","activities","regions","allActivities","allRegions","mapStateToProps","state","ConnectionForm","props","getAllLists","url","get","then","response","data","urlAllActivities","urlAllRegions","connectionUser","login","password","waitConnectionUser","createUser","newUser","setState","mailAddress","post","method","headers","res","console","log","deconnectionUser","undefined","newLogin","newPassword","event","target","value","bind","handleChangeLogin","handleChangePassword","handleChangeNewLogin","handleChangeNewPassword","handleChangeMailAddress","Component","ConnectedConnectionForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { getId, connectUser, getUserActivities, getUserRegions, getAllActivities, getAllRegions } from '../actions/actions'\nimport { User } from '../user'\nimport { ConnectedActivityList } from './activityList'\nimport { ConnectedRegionList } from './regionList'\nconst axios = require('axios');\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getId: id => dispatch(getId(id)),\n    connectUser: user => dispatch(connectUser(user)),\n    getUserActivities: activities => dispatch(getUserActivities(activities)),\n    getUserRegions: regions => dispatch(getUserRegions(regions)),\n    getAllActivities: allActivities => dispatch(getAllActivities(allActivities)),\n    getAllRegions: allRegions => dispatch(getAllRegions(allRegions))\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    id: state.id,\n    user: state.user\n  }\n}\n\nclass ConnectionForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {login: '', password: '', newLogin: '', newPassword:'', mailAddress: '' };\n    }\n\n    handleChangeLogin(event) {\n        this.setState({login: event.target.value});\n    }\n\n    handleChangePassword(event) {\n        this.setState({password: event.target.value});\n    }\n\n    handleChangeNewLogin(event) {\n      this.setState({newLogin: event.target.value});\n  }\n\n  handleChangeNewPassword(event) {\n      this.setState({newPassword: event.target.value});\n  }\n\n  handleChangeMailAddress(event) {\n    this.setState({mailAddress: event.target.value});\n}\n\n    getAllLists = () => {\n      let url = 'http://localhost:8080/user/getUser/'+this.props.id;\n      axios.get(url).then(response => this.props.getUserActivities(response.data.activities));\n      axios.get(url).then(response => this.props.getUserRegions(response.data.regions));\n      let urlAllActivities = 'http://localhost:8080/activity/getAll';\n      axios.get(urlAllActivities).then(response => this.props.getAllActivities(response.data));\n      let urlAllRegions = 'http://localhost:8080/region/getAll';\n      axios.get(urlAllRegions).then(response => this.props.getAllRegions(response.data));\n    }\n\n    waitConnectionUser(data) {//fonction permettant d'attendre le r√©sultat de la promesse avant de changer l'affichage\n      this.props.getId(data);\n      if(this.props.id===-1){\n        this.props.connectUser(undefined);\n      }else{\n        let user = new User(this.state.login, this.state.password);\n        this.getAllLists();\n        this.props.connectUser(user);\n      }\n    }\n\n    connectionUser = () => {\n      if(this.state.login==='' || this.state.login===''){\n        //ne fait rien si l'utilisateur ne saisi pas de login ou de mot de passe\n      }else{\n        let url = 'http://localhost:8080/user/getUserByLogin/'+this.state.login+'/'+this.state.password;\n        axios.get(url).then(response => this.waitConnectionUser(response.data));\n      }\n    }\n\n    createUser = () => {\n      let newUser = { \"username\": this.setState.login,\n                      \"password\": this.state.login,\n                      \"mail\": this.state.mailAddress,\n                      \"roles\": [],\n                      \"activities\": [],\n                      \"regions\": []\n                    }\n      \n     axios.post({ method: 'POST', url: 'http://localhost:8080/user/create', headers: { 'Access-Control-Allow-Credentials' : true }}, newUser).then(res => console.log(res.data));\n      \n    }\n\n    deconnectionUser = () => {\n      this.state.login='';\n      this.state.password='';\n      this.props.connectUser(undefined);\n    }\n  \n    render() {\n      if(this.props.user!==undefined){\n        return <div><p>Bienvenue, {this.state.login}</p>\n        <button onClick={this.deconnectionUser.bind(this)}>logout</button>\n        <br/><br/>\n        <ConnectedActivityList/>\n        <br/><br/>\n        <ConnectedRegionList/>\n        </div>\n      }else{\n        return (\n          <div>\n          <h1>Connexion</h1>\n          <label>\n            <input type=\"text\" placeholder=\"login\" onChange={this.handleChangeLogin.bind(this)} />\n          </label>\n          <label>\n            <input type=\"password\" placeholder=\"password\" onChange={this.handleChangePassword.bind(this)} />\n          </label>\n          <button onClick={this.connectionUser.bind(this)}>login</button>\n          <h1>Registration</h1>\n          <label>\n            <input type=\"text\" placeholder=\"login\" onChange={this.handleChangeNewLogin.bind(this)} />\n          </label>\n          <label>\n            <input type=\"password\" placeholder=\"password\" onChange={this.handleChangeNewPassword.bind(this)} />\n          </label>\n          <label>\n            <input type=\"test\" placeholder=\"mail address\" onChange={this.handleChangeMailAddress.bind(this)} />\n          </label>\n          <button onClick={this.createUser.bind(this)}>register</button>\n          </div>\n        );\n      }\n    }\n}\n\nconst ConnectedConnectionForm = connect(mapStateToProps, mapDispatchToProps)(ConnectionForm);\n\nexport {\n  ConnectedConnectionForm\n}\n"]},"metadata":{},"sourceType":"module"}