{"ast":null,"code":"import _classCallCheck from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/src/components/regionList.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { addUserRegion as _addUserRegion, getUserRegions as _getUserRegions } from '../actions/actions';\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addUserRegion: function addUserRegion(region) {\n      return dispatch(_addUserRegion(region));\n    },\n    getUserRegions: function getUserRegions(regions) {\n      return dispatch(_getUserRegions(regions));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    id: state.id,\n    user: state.user,\n    mailAddress: state.mailAddress,\n    userRegions: state.regionList,\n    allRegions: state.availableRegions,\n    userActivities: state.activityList\n  };\n};\n\nvar RegionList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegionList, _React$Component);\n\n  function RegionList(props) {\n    var _this;\n\n    _classCallCheck(this, RegionList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegionList).call(this, props));\n\n    _this.displayUserRegions = function () {\n      var Data = _this.props.userRegions,\n          MakeItem = function MakeItem(X) {\n        return React.createElement(\"li\", {\n          key: X.city,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, X.city);\n      };\n\n      return Data.map(MakeItem);\n    };\n\n    _this.displayAllRegions = function () {\n      var Data = _this.props.allRegions,\n          MakeItem = function MakeItem(X) {\n        return React.createElement(\"option\", {\n          key: X.city,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, X.city);\n      };\n\n      return Data.map(MakeItem);\n    };\n\n    _this.state = {\n      selectedRegion: ''\n    };\n    return _this;\n  }\n\n  _createClass(RegionList, [{\n    key: \"handleChangeSelectedRegion\",\n    value: function handleChangeSelectedRegion(event) {\n      this.setState({\n        selectedRegion: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Liste des r\\xE9gions\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.displayUserRegions()), React.createElement(\"select\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.displayAllRegions()));\n    }\n  }]);\n\n  return RegionList;\n}(React.Component);\n\nvar ConnectedRegionList = connect(mapStateToProps, mapDispatchToProps)(RegionList);\nexport { ConnectedRegionList };","map":{"version":3,"sources":["/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/src/components/regionList.js"],"names":["React","connect","addUserRegion","getUserRegions","mapDispatchToProps","dispatch","region","regions","mapStateToProps","state","id","user","mailAddress","userRegions","regionList","allRegions","availableRegions","userActivities","activityList","RegionList","props","displayUserRegions","Data","MakeItem","X","city","map","displayAllRegions","selectedRegion","event","setState","target","value","Component","ConnectedRegionList"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAa,IAAbA,cAAT,EAAwBC,cAAc,IAAdA,eAAxB,QAA8C,oBAA9C;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHH,IAAAA,aAAa,EAAE,uBAAAI,MAAM;AAAA,aAAID,QAAQ,CAACH,cAAa,CAACI,MAAD,CAAd,CAAZ;AAAA,KADlB;AAEHH,IAAAA,cAAc,EAAG,wBAAAI,OAAO;AAAA,aAAIF,QAAQ,CAACF,eAAc,CAACI,OAAD,CAAf,CAAZ;AAAA;AAFrB,GAAP;AAID,CALH;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHC,IAAAA,EAAE,EAAED,KAAK,CAACC,EADP;AAEHC,IAAAA,IAAI,EAAEF,KAAK,CAACE,IAFT;AAGHC,IAAAA,WAAW,EAAEH,KAAK,CAACG,WAHhB;AAIHC,IAAAA,WAAW,EAAEJ,KAAK,CAACK,UAJhB;AAKHC,IAAAA,UAAU,EAAEN,KAAK,CAACO,gBALf;AAMHC,IAAAA,cAAc,EAAER,KAAK,CAACS;AANnB,GAAP;AAQH,CATD;;IAWMC,U;;;;;AAEF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;;AADe,UASnBC,kBATmB,GASE,YAAM;AACvB,UAAIC,IAAI,GAAG,MAAKF,KAAL,CAAWP,WAAtB;AAAA,UAAmCU,QAAQ,GAAG,SAAXA,QAAW,CAASC,CAAT,EAAY;AACtD,eAAO;AAAI,UAAA,GAAG,EAAEA,CAAC,CAACC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkBD,CAAC,CAACC,IAApB,CAAP;AACH,OAFD;;AAGA,aAAOH,IAAI,CAACI,GAAL,CAASH,QAAT,CAAP;AACH,KAdkB;;AAAA,UAgBnBI,iBAhBmB,GAgBC,YAAM;AACtB,UAAIL,IAAI,GAAG,MAAKF,KAAL,CAAWL,UAAtB;AAAA,UAAkCQ,QAAQ,GAAG,SAAXA,QAAW,CAASC,CAAT,EAAY;AACnD,eAAO;AAAQ,UAAA,GAAG,EAAEA,CAAC,CAACC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBD,CAAC,CAACC,IAAxB,CAAP;AACL,OAFD;;AAGA,aAAOH,IAAI,CAACI,GAAL,CAASH,QAAT,CAAP;AACH,KArBkB;;AAEf,UAAKd,KAAL,GAAa;AAAEmB,MAAAA,cAAc,EAAE;AAAlB,KAAb;AAFe;AAGlB;;;;+CAE0BC,K,EAAO;AAC9B,WAAKC,QAAL,CAAc;AAACF,QAAAA,cAAc,EAAEC,KAAK,CAACE,MAAN,CAAaC;AAA9B,OAAd;AACH;;;6BAgBQ;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKX,kBAAL,EAAL,CAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAS,KAAKM,iBAAL,EAAT,CAHG,CAAP;AAKH;;;;EA/BoB3B,KAAK,CAACiC,S;;AAkC/B,IAAMC,mBAAmB,GAAGjC,OAAO,CAACO,eAAD,EAAkBJ,kBAAlB,CAAP,CAA6Ce,UAA7C,CAA5B;AAEA,SACIe,mBADJ","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { addUserRegion, getUserRegions } from '../actions/actions'\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addUserRegion: region => dispatch(addUserRegion(region)),\n        getUserRegions : regions => dispatch(getUserRegions(regions))\n    };\n  };\n\nconst mapStateToProps = (state) => {\n    return {\n        id: state.id,\n        user: state.user,\n        mailAddress: state.mailAddress,\n        userRegions: state.regionList,\n        allRegions: state.availableRegions,\n        userActivities: state.activityList\n    }\n}\n\nclass RegionList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { selectedRegion: '' };\n    }\n\n    handleChangeSelectedRegion(event) {\n        this.setState({selectedRegion: event.target.value});\n    }\n\n    displayUserRegions = () => {\n        var Data = this.props.userRegions, MakeItem = function(X) {\n            return <li key={X.city}>{X.city}</li>\n        };\n        return Data.map(MakeItem);\n    }\n\n    displayAllRegions = () => {\n        var Data = this.props.allRegions, MakeItem = function(X) {\n              return <option key={X.city}>{X.city}</option>\n        };\n        return Data.map(MakeItem);\n    }\n\n    render() {\n        return <div>\n            <h3>Liste des r√©gions</h3>\n            <ul>{this.displayUserRegions()}</ul>\n            <select>{this.displayAllRegions()}</select>\n            </div>\n    }\n}\n\nconst ConnectedRegionList = connect(mapStateToProps, mapDispatchToProps)(RegionList);\n\nexport {\n    ConnectedRegionList\n}"]},"metadata":{},"sourceType":"module"}