{"ast":null,"code":"import _classCallCheck from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/src/components/activityList.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { addUserActivity as _addUserActivity, getUserActivities as _getUserActivities } from '../actions/actions';\n\nvar axios = require('axios');\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addUserActivity: function addUserActivity(activity) {\n      return dispatch(_addUserActivity(activity));\n    },\n    getUserActivities: function getUserActivities(activities) {\n      return dispatch(_getUserActivities(activities));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    id: state.id,\n    role: state.role,\n    user: state.user,\n    mailAddress: state.mailAddress,\n    userActivities: state.activityList,\n    allActivities: state.availableActivities,\n    userRegions: state.regionList\n  };\n};\n\nvar ActivityList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ActivityList, _React$Component);\n\n  function ActivityList(props) {\n    var _this;\n\n    _classCallCheck(this, ActivityList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ActivityList).call(this, props));\n\n    _this.displayUserActivities = function () {\n      var Data = _this.props.userActivities,\n          MakeItem = function MakeItem(X) {\n        return React.createElement(\"li\", {\n          key: X.name + \"|\" + X.level,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, X.name + \"|\" + X.level);\n      };\n\n      return Data.map(MakeItem);\n    };\n\n    _this.displayAllActivities = function () {\n      var activityListNoDuplicate = [];\n\n      var Data = _this.props.allActivities,\n          MakeItem = function MakeItem(X) {\n        if (!activityListNoDuplicate.includes(X.name)) {\n          activityListNoDuplicate.push(X.name);\n          return React.createElement(\"option\", {\n            key: X.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, X.name);\n        }\n      };\n\n      return Data.map(MakeItem);\n    };\n\n    _this.removeActivityToList = function () {\n      for (var i = 0; i < _this.props.allActivities.length; i++) {\n        if (_this.props.allActivities[i].name === _this.state.selectedActivity && _this.props.allActivities[i].level === _this.state.selectedLevel) {\n          var boolContain = false;\n          var newActivities = []; //on construit la nouvelle liste d'activitées de l'utilisateur\n\n          for (var j = 0; j < _this.props.userActivities.length; j++) {\n            //vérifie si l'activité sélectionnée appartient à la liste de l'utilisateur\n            if (JSON.stringify(_this.props.userActivities[j]) === JSON.stringify(_this.props.allActivities[i])) {\n              boolContain = true;\n            } else {\n              newActivities.push(_this.props.userActivities[j]);\n            }\n          }\n\n          if (boolContain) {\n            _this.props.getUserActivities(newActivities);\n\n            var urlRemoveActivity = 'http://localhost:8080/user/update/' + _this.props.id;\n            var newUser = {\n              \"username\": _this.props.user.login,\n              \"password\": _this.props.user.password,\n              \"mail\": _this.props.mailAddress,\n              \"roles\": _this.props.role,\n              \"activities\": newActivities,\n              \"regions\": _this.props.userRegions\n            };\n            axios.put(urlRemoveActivity, newUser).then(function (res) {\n              return console.log();\n            });\n          } else {\n            alert(\"cette activité associée à ce niveau ne fait pas partie de votre liste d'activitées\");\n          }\n        }\n      }\n    };\n\n    _this.addActivityToList = function () {\n      for (var i = 0; i < _this.props.allActivities.length; i++) {\n        if (_this.props.allActivities[i].name === _this.state.selectedActivity && _this.props.allActivities[i].level === _this.state.selectedLevel) {\n          var boolContain = false;\n\n          for (var j = 0; j < _this.props.userActivities.length; j++) {\n            //vérifie si l'activité sélectionnée n'appartient pas à la liste de l'utilisateur\n            if (JSON.stringify(_this.props.userActivities[j]) === JSON.stringify(_this.props.allActivities[i])) {\n              alert(\"cette activité associée à ce niveau fait déjà partie de votre liste d'activitées\");\n              boolContain = true;\n            }\n          }\n\n          if (!boolContain) {\n            var newActivities = _this.props.userActivities;\n\n            _this.props.addUserActivity(_this.props.allActivities[i]);\n\n            newActivities.push(_this.props.allActivities[i]);\n            var urlAddActivity = 'http://localhost:8080/user/update/' + _this.props.id;\n            var newUser = {\n              \"username\": _this.props.user.login,\n              \"password\": _this.props.user.password,\n              \"mail\": _this.props.mailAddress,\n              \"roles\": _this.props.role,\n              \"activities\": newActivities,\n              \"regions\": _this.props.userRegions\n            };\n            axios.put(urlAddActivity, newUser).then(function (res) {\n              return console.log();\n            });\n          }\n        }\n      }\n    };\n\n    _this.state = {\n      selectedActivity: '',\n      selectedLevel: ''\n    };\n    return _this;\n  }\n\n  _createClass(ActivityList, [{\n    key: \"handleChangeSelectedActivity\",\n    value: function handleChangeSelectedActivity(event) {\n      this.setState({\n        selectedActivity: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeSelectedLevel\",\n    value: function handleChangeSelectedLevel(event) {\n      this.setState({\n        selectedLevel: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Liste des activit\\xE9es\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.displayUserActivities()), React.createElement(\"select\", {\n        onChange: this.handleChangeSelectedActivity.bind(this),\n        value: this.state.selectedActivity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), this.displayAllActivities()), React.createElement(\"select\", {\n        onChange: this.handleChangeSelectedLevel.bind(this),\n        value: this.state.selectedLevel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"EASY\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"MEDIUM\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"HARD\")), React.createElement(\"button\", {\n        onClick: this.removeActivityToList.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"-\"), React.createElement(\"button\", {\n        onClick: this.addActivityToList.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"+\"));\n    }\n  }]);\n\n  return ActivityList;\n}(React.Component);\n\nvar ConnectedActivityList = connect(mapStateToProps, mapDispatchToProps)(ActivityList);\nexport { ConnectedActivityList };","map":{"version":3,"sources":["/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/src/components/activityList.js"],"names":["React","connect","addUserActivity","getUserActivities","axios","require","mapDispatchToProps","dispatch","activity","activities","mapStateToProps","state","id","role","user","mailAddress","userActivities","activityList","allActivities","availableActivities","userRegions","regionList","ActivityList","props","displayUserActivities","Data","MakeItem","X","name","level","map","displayAllActivities","activityListNoDuplicate","includes","push","removeActivityToList","i","length","selectedActivity","selectedLevel","boolContain","newActivities","j","JSON","stringify","urlRemoveActivity","newUser","login","password","put","then","res","console","log","alert","addActivityToList","urlAddActivity","event","setState","target","value","handleChangeSelectedActivity","bind","handleChangeSelectedLevel","Component","ConnectedActivityList"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAe,IAAfA,gBAAT,EAA0BC,iBAAiB,IAAjBA,kBAA1B,QAAmD,oBAAnD;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHL,IAAAA,eAAe,EAAE,yBAAAM,QAAQ;AAAA,aAAID,QAAQ,CAACL,gBAAe,CAACM,QAAD,CAAhB,CAAZ;AAAA,KADtB;AAEHL,IAAAA,iBAAiB,EAAG,2BAAAM,UAAU;AAAA,aAAIF,QAAQ,CAACJ,kBAAiB,CAACM,UAAD,CAAlB,CAAZ;AAAA;AAF3B,GAAP;AAID,CALH;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHC,IAAAA,EAAE,EAAED,KAAK,CAACC,EADP;AAEHC,IAAAA,IAAI,EAAEF,KAAK,CAACE,IAFT;AAGHC,IAAAA,IAAI,EAAEH,KAAK,CAACG,IAHT;AAIHC,IAAAA,WAAW,EAAEJ,KAAK,CAACI,WAJhB;AAKHC,IAAAA,cAAc,EAAEL,KAAK,CAACM,YALnB;AAMHC,IAAAA,aAAa,EAAEP,KAAK,CAACQ,mBANlB;AAOHC,IAAAA,WAAW,EAAET,KAAK,CAACU;AAPhB,GAAP;AASH,CAVD;;IAYMC,Y;;;;;AAEF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UAanBC,qBAbmB,GAaK,YAAM;AAC1B,UAAIC,IAAI,GAAG,MAAKF,KAAL,CAAWP,cAAtB;AAAA,UAAsCU,QAAQ,GAAG,SAAXA,QAAW,CAASC,CAAT,EAAY;AACzD,eAAO;AAAI,UAAA,GAAG,EAAEA,CAAC,CAACC,IAAF,GAAO,GAAP,GAAWD,CAAC,CAACE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BF,CAAC,CAACC,IAAF,GAAO,GAAP,GAAWD,CAAC,CAACE,KAA3C,CAAP;AACH,OAFD;;AAGA,aAAOJ,IAAI,CAACK,GAAL,CAASJ,QAAT,CAAP;AACH,KAlBkB;;AAAA,UAoBnBK,oBApBmB,GAoBI,YAAM;AACzB,UAAIC,uBAAuB,GAAC,EAA5B;;AACA,UAAIP,IAAI,GAAG,MAAKF,KAAL,CAAWL,aAAtB;AAAA,UAAqCQ,QAAQ,GAAG,SAAXA,QAAW,CAASC,CAAT,EAAY;AACxD,YAAG,CAACK,uBAAuB,CAACC,QAAxB,CAAiCN,CAAC,CAACC,IAAnC,CAAJ,EAA6C;AACzCI,UAAAA,uBAAuB,CAACE,IAAxB,CAA6BP,CAAC,CAACC,IAA/B;AACA,iBAAO;AAAQ,YAAA,GAAG,EAAED,CAAC,CAACC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAsBD,CAAC,CAACC,IAAxB,CAAP;AACH;AACJ,OALD;;AAMA,aAAOH,IAAI,CAACK,GAAL,CAASJ,QAAT,CAAP;AACH,KA7BkB;;AAAA,UA+BnBS,oBA/BmB,GA+BI,YAAM;AACzB,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,MAAKb,KAAL,CAAWL,aAAX,CAAyBmB,MAAvC,EAA8CD,CAAC,EAA/C,EAAkD;AAC9C,YAAG,MAAKb,KAAL,CAAWL,aAAX,CAAyBkB,CAAzB,EAA4BR,IAA5B,KAAmC,MAAKjB,KAAL,CAAW2B,gBAA9C,IAAkE,MAAKf,KAAL,CAAWL,aAAX,CAAyBkB,CAAzB,EAA4BP,KAA5B,KAAoC,MAAKlB,KAAL,CAAW4B,aAApH,EAAkI;AAC9H,cAAIC,WAAW,GAAC,KAAhB;AACA,cAAIC,aAAa,GAAG,EAApB,CAF8H,CAEvG;;AACvB,eAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,MAAKnB,KAAL,CAAWP,cAAX,CAA0BqB,MAAxC,EAA+CK,CAAC,EAAhD,EAAmD;AAC/C;AACA,gBAAGC,IAAI,CAACC,SAAL,CAAe,MAAKrB,KAAL,CAAWP,cAAX,CAA0B0B,CAA1B,CAAf,MAA+CC,IAAI,CAACC,SAAL,CAAe,MAAKrB,KAAL,CAAWL,aAAX,CAAyBkB,CAAzB,CAAf,CAAlD,EAA8F;AAC1FI,cAAAA,WAAW,GAAC,IAAZ;AACH,aAFD,MAEK;AACDC,cAAAA,aAAa,CAACP,IAAd,CAAmB,MAAKX,KAAL,CAAWP,cAAX,CAA0B0B,CAA1B,CAAnB;AACH;AACJ;;AACD,cAAGF,WAAH,EAAe;AACX,kBAAKjB,KAAL,CAAWpB,iBAAX,CAA6BsC,aAA7B;;AAEA,gBAAII,iBAAiB,GAAG,uCAAqC,MAAKtB,KAAL,CAAWX,EAAxE;AACA,gBAAIkC,OAAO,GAAG;AAAE,0BAAY,MAAKvB,KAAL,CAAWT,IAAX,CAAgBiC,KAA9B;AACZ,0BAAY,MAAKxB,KAAL,CAAWT,IAAX,CAAgBkC,QADhB;AAEZ,sBAAQ,MAAKzB,KAAL,CAAWR,WAFP;AAGZ,uBAAS,MAAKQ,KAAL,CAAWV,IAHR;AAIZ,4BAAc4B,aAJF;AAKZ,yBAAW,MAAKlB,KAAL,CAAWH;AALV,aAAd;AAOAhB,YAAAA,KAAK,CAAC6C,GAAN,CAAUJ,iBAAV,EAA6BC,OAA7B,EAAsCI,IAAtC,CAA2C,UAAAC,GAAG;AAAA,qBAAIC,OAAO,CAACC,GAAR,EAAJ;AAAA,aAA9C;AACH,WAZD,MAYK;AACDC,YAAAA,KAAK,CAAC,oFAAD,CAAL;AACH;AACJ;AACJ;AACJ,KA7DkB;;AAAA,UA+DnBC,iBA/DmB,GA+DC,YAAM;AACtB,WAAI,IAAInB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,MAAKb,KAAL,CAAWL,aAAX,CAAyBmB,MAAvC,EAA8CD,CAAC,EAA/C,EAAkD;AAC9C,YAAG,MAAKb,KAAL,CAAWL,aAAX,CAAyBkB,CAAzB,EAA4BR,IAA5B,KAAmC,MAAKjB,KAAL,CAAW2B,gBAA9C,IAAkE,MAAKf,KAAL,CAAWL,aAAX,CAAyBkB,CAAzB,EAA4BP,KAA5B,KAAoC,MAAKlB,KAAL,CAAW4B,aAApH,EAAkI;AAC9H,cAAIC,WAAW,GAAC,KAAhB;;AACA,eAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,MAAKnB,KAAL,CAAWP,cAAX,CAA0BqB,MAAxC,EAA+CK,CAAC,EAAhD,EAAmD;AAC/C;AACA,gBAAGC,IAAI,CAACC,SAAL,CAAe,MAAKrB,KAAL,CAAWP,cAAX,CAA0B0B,CAA1B,CAAf,MAA+CC,IAAI,CAACC,SAAL,CAAe,MAAKrB,KAAL,CAAWL,aAAX,CAAyBkB,CAAzB,CAAf,CAAlD,EAA8F;AAC1FkB,cAAAA,KAAK,CAAC,kFAAD,CAAL;AACAd,cAAAA,WAAW,GAAC,IAAZ;AACH;AACJ;;AACD,cAAG,CAACA,WAAJ,EAAgB;AACZ,gBAAIC,aAAa,GAAG,MAAKlB,KAAL,CAAWP,cAA/B;;AACA,kBAAKO,KAAL,CAAWrB,eAAX,CAA2B,MAAKqB,KAAL,CAAWL,aAAX,CAAyBkB,CAAzB,CAA3B;;AACAK,YAAAA,aAAa,CAACP,IAAd,CAAmB,MAAKX,KAAL,CAAWL,aAAX,CAAyBkB,CAAzB,CAAnB;AAEA,gBAAIoB,cAAc,GAAG,uCAAqC,MAAKjC,KAAL,CAAWX,EAArE;AACA,gBAAIkC,OAAO,GAAG;AAAE,0BAAY,MAAKvB,KAAL,CAAWT,IAAX,CAAgBiC,KAA9B;AACZ,0BAAY,MAAKxB,KAAL,CAAWT,IAAX,CAAgBkC,QADhB;AAEZ,sBAAQ,MAAKzB,KAAL,CAAWR,WAFP;AAGZ,uBAAS,MAAKQ,KAAL,CAAWV,IAHR;AAIZ,4BAAc4B,aAJF;AAKZ,yBAAW,MAAKlB,KAAL,CAAWH;AALV,aAAd;AAOAhB,YAAAA,KAAK,CAAC6C,GAAN,CAAUO,cAAV,EAA0BV,OAA1B,EAAmCI,IAAnC,CAAwC,UAAAC,GAAG;AAAA,qBAAIC,OAAO,CAACC,GAAR,EAAJ;AAAA,aAA3C;AACH;AACJ;AACJ;AACJ,KA3FkB;;AAEf,UAAK1C,KAAL,GAAa;AAAE2B,MAAAA,gBAAgB,EAAE,EAApB;AAAwBC,MAAAA,aAAa,EAAG;AAAxC,KAAb;AAFe;AAGlB;;;;iDAE4BkB,K,EAAO;AAChC,WAAKC,QAAL,CAAc;AAACpB,QAAAA,gBAAgB,EAAEmB,KAAK,CAACE,MAAN,CAAaC;AAAhC,OAAd;AACH;;;8CAEyBH,K,EAAO;AAC7B,WAAKC,QAAL,CAAc;AAACnB,QAAAA,aAAa,EAAEkB,KAAK,CAACE,MAAN,CAAaC;AAA7B,OAAd;AACH;;;6BAkFQ;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKpC,qBAAL,EAAL,CAFG,EAGH;AAAQ,QAAA,QAAQ,EAAE,KAAKqC,4BAAL,CAAkCC,IAAlC,CAAuC,IAAvC,CAAlB;AAAgE,QAAA,KAAK,EAAE,KAAKnD,KAAL,CAAW2B,gBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApG,EAAsH,KAAKP,oBAAL,EAAtH,CAHG,EAIH;AAAQ,QAAA,QAAQ,EAAE,KAAKgC,yBAAL,CAA+BD,IAA/B,CAAoC,IAApC,CAAlB;AAA6D,QAAA,KAAK,EAAE,KAAKnD,KAAL,CAAW4B,aAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9F,EAA+G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA/G,EAAoI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAApI,EAA2J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3J,CAJG,EAKH;AAAQ,QAAA,OAAO,EAAE,KAAKJ,oBAAL,CAA0B2B,IAA1B,CAA+B,IAA/B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALG,EAMH;AAAQ,QAAA,OAAO,EAAE,KAAKP,iBAAL,CAAuBO,IAAvB,CAA4B,IAA5B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANG,CAAP;AAQH;;;;EAxGsB9D,KAAK,CAACgE,S;;AA2GjC,IAAMC,qBAAqB,GAAGhE,OAAO,CAACS,eAAD,EAAkBJ,kBAAlB,CAAP,CAA6CgB,YAA7C,CAA9B;AAEA,SACI2C,qBADJ","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { addUserActivity, getUserActivities } from '../actions/actions'\nconst axios = require('axios');\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addUserActivity: activity => dispatch(addUserActivity(activity)),\n        getUserActivities : activities => dispatch(getUserActivities(activities))\n    };\n  };\n\nconst mapStateToProps = (state) => {\n    return {\n        id: state.id,\n        role: state.role,\n        user: state.user,\n        mailAddress: state.mailAddress,\n        userActivities: state.activityList,\n        allActivities: state.availableActivities,\n        userRegions: state.regionList\n    }\n}\n\nclass ActivityList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { selectedActivity: '', selectedLevel : '' };\n    }\n\n    handleChangeSelectedActivity(event) {\n        this.setState({selectedActivity: event.target.value});\n    }\n\n    handleChangeSelectedLevel(event) {\n        this.setState({selectedLevel: event.target.value});\n    }\n\n    displayUserActivities = () => {\n        var Data = this.props.userActivities, MakeItem = function(X) {\n            return <li key={X.name+\"|\"+X.level}>{X.name+\"|\"+X.level}</li>\n        };\n        return Data.map(MakeItem);\n    }\n\n    displayAllActivities = () => {\n        let activityListNoDuplicate=[];\n        var Data = this.props.allActivities, MakeItem = function(X) {\n            if(!activityListNoDuplicate.includes(X.name)){\n                activityListNoDuplicate.push(X.name);\n                return <option key={X.name}>{X.name}</option>\n            }\n        };\n        return Data.map(MakeItem);\n    }\n\n    removeActivityToList = () => {\n        for(let i=0;i<this.props.allActivities.length;i++){\n            if(this.props.allActivities[i].name===this.state.selectedActivity && this.props.allActivities[i].level===this.state.selectedLevel){\n                let boolContain=false;\n                let newActivities = [];//on construit la nouvelle liste d'activitées de l'utilisateur\n                for(let j=0;j<this.props.userActivities.length;j++){\n                    //vérifie si l'activité sélectionnée appartient à la liste de l'utilisateur\n                    if(JSON.stringify(this.props.userActivities[j])===JSON.stringify(this.props.allActivities[i])){\n                        boolContain=true;\n                    }else{\n                        newActivities.push(this.props.userActivities[j]);\n                    }\n                }\n                if(boolContain){\n                    this.props.getUserActivities(newActivities)\n\n                    let urlRemoveActivity = 'http://localhost:8080/user/update/'+this.props.id;\n                    let newUser = { \"username\": this.props.user.login,\n                      \"password\": this.props.user.password,\n                      \"mail\": this.props.mailAddress,\n                      \"roles\": this.props.role,\n                      \"activities\": newActivities,\n                      \"regions\": this.props.userRegions\n                    }\n                    axios.put(urlRemoveActivity, newUser).then(res => console.log());\n                }else{\n                    alert(\"cette activité associée à ce niveau ne fait pas partie de votre liste d'activitées\");\n                }\n            }\n        }\n    }\n\n    addActivityToList = () => {\n        for(let i=0;i<this.props.allActivities.length;i++){\n            if(this.props.allActivities[i].name===this.state.selectedActivity && this.props.allActivities[i].level===this.state.selectedLevel){\n                let boolContain=false;\n                for(let j=0;j<this.props.userActivities.length;j++){\n                    //vérifie si l'activité sélectionnée n'appartient pas à la liste de l'utilisateur\n                    if(JSON.stringify(this.props.userActivities[j])===JSON.stringify(this.props.allActivities[i])){\n                        alert(\"cette activité associée à ce niveau fait déjà partie de votre liste d'activitées\");\n                        boolContain=true;\n                    }\n                }\n                if(!boolContain){\n                    let newActivities = this.props.userActivities;\n                    this.props.addUserActivity(this.props.allActivities[i])\n                    newActivities.push(this.props.allActivities[i]);\n\n                    let urlAddActivity = 'http://localhost:8080/user/update/'+this.props.id;\n                    let newUser = { \"username\": this.props.user.login,\n                      \"password\": this.props.user.password,\n                      \"mail\": this.props.mailAddress,\n                      \"roles\": this.props.role,\n                      \"activities\": newActivities,\n                      \"regions\": this.props.userRegions\n                    }\n                    axios.put(urlAddActivity, newUser).then(res => console.log());\n                }\n            }\n        }\n    }\n\n    render() {\n        return <div>\n            <h3>Liste des activitées</h3>\n            <ul>{this.displayUserActivities()}</ul>\n            <select onChange={this.handleChangeSelectedActivity.bind(this)} value={this.state.selectedActivity}><option></option>{this.displayAllActivities()}</select>\n            <select onChange={this.handleChangeSelectedLevel.bind(this)} value={this.state.selectedLevel}><option></option><option>EASY</option><option>MEDIUM</option><option>HARD</option></select>\n            <button onClick={this.removeActivityToList.bind(this)}>-</button>\n            <button onClick={this.addActivityToList.bind(this)}>+</button>\n            </div>\n    }\n}\n\nconst ConnectedActivityList = connect(mapStateToProps, mapDispatchToProps)(ActivityList);\n\nexport {\n    ConnectedActivityList\n}\n"]},"metadata":{},"sourceType":"module"}