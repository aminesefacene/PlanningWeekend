{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger'; // This will log into our console information about redux actions & store\n\nimport thunk from 'redux-thunk'; // This middleware allows us to use Promises in our actions (async in action)\n\nimport rootReducer from './reducers/rootReducer'; // We will implement this later on, create a file exporting and empty object for now\n\nvar middlewares = applyMiddleware(thunk, createLogger());\nexport default function configureStore() {\n  var preloadedState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // preloadedState is useful for SSR, which we don't use\n  var store = createStore(rootReducer, preloadedState, middlewares);\n  return store;\n}","map":{"version":3,"sources":["/home/miola/planificationweekendapp/src/configureStore.js"],"names":["createStore","applyMiddleware","createLogger","thunk","rootReducer","middlewares","configureStore","preloadedState","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,cAA7B,C,CAA4C;;AAC5C,OAAOC,KAAP,MAAkB,aAAlB,C,CAAgC;;AAEhC,OAAOC,WAAP,MAAwB,wBAAxB,C,CAAiD;;AAEjD,IAAMC,WAAW,GAAGJ,eAAe,CAACE,KAAD,EAAQD,YAAY,EAApB,CAAnC;AAEA,eAAe,SAASI,cAAT,GAA6C;AAAA,MAArBC,cAAqB,uEAAJ,EAAI;AAAE;AAC5D,MAAMC,KAAK,GAAGR,WAAW,CAACI,WAAD,EAAcG,cAAd,EAA8BF,WAA9B,CAAzB;AAEA,SAAOG,KAAP;AACD","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger' // This will log into our console information about redux actions & store\nimport thunk from 'redux-thunk' // This middleware allows us to use Promises in our actions (async in action)\n\nimport rootReducer from './reducers/rootReducer' // We will implement this later on, create a file exporting and empty object for now\n\nconst middlewares = applyMiddleware(thunk, createLogger())\n\nexport default function configureStore(preloadedState = {}) { // preloadedState is useful for SSR, which we don't use\n  const store = createStore(rootReducer, preloadedState, middlewares)\n\n  return store\n}"]},"metadata":{},"sourceType":"module"}