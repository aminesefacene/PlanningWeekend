{"ast":null,"code":"import _classCallCheck from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/src/components/regionList.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { addUserRegion as _addUserRegion, getUserRegions as _getUserRegions } from '../actions/actions';\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addUserRegion: function addUserRegion(region) {\n      return dispatch(_addUserRegion(region));\n    },\n    getUserRegions: function getUserRegions(regions) {\n      return dispatch(_getUserRegions(regions));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    id: state.id,\n    user: state.user,\n    mailAddress: state.mailAddress,\n    userRegions: state.regionList,\n    allRegions: state.availableRegions,\n    userActivities: state.activityList\n  };\n};\n\nvar RegionList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegionList, _React$Component);\n\n  function RegionList(props) {\n    var _this;\n\n    _classCallCheck(this, RegionList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegionList).call(this, props));\n\n    _this.displayUserRegions = function () {\n      var Data = _this.props.userRegions,\n          MakeItem = function MakeItem(X) {\n        return React.createElement(\"li\", {\n          key: X.city,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, X.city);\n      };\n\n      return Data.map(MakeItem);\n    };\n\n    _this.displayAllRegions = function () {\n      var Data = _this.props.allRegions,\n          MakeItem = function MakeItem(X) {\n        return React.createElement(\"option\", {\n          key: X.city,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, X.city);\n      };\n\n      return Data.map(MakeItem);\n    };\n\n    _this.removeRegionToList = function () {\n      for (var i = 0; i < _this.props.allRegions.length; i++) {\n        if (_this.props.allRegions[i].name === _this.state.selectedRegion) {\n          var boolContain = false;\n          var newActivities = []; //on construit la nouvelle liste d'activitées de l'utilisateur\n\n          for (var j = 0; j < _this.props.userActivities.length; j++) {\n            //vérifie si l'activité sélectionnée appartient à la liste de l'utilisateur\n            if (JSON.stringify(_this.props.userActivities[j]) === JSON.stringify(_this.props.allActivities[i])) {\n              boolContain = true;\n            } else {\n              newActivities.push(_this.props.userActivities[j]);\n            }\n          }\n\n          if (boolContain) {\n            _this.props.getUserActivities(newActivities);\n\n            var urlAddActivity = 'http://localhost:8080/user/update/' + _this.props.id;\n            var newUser = {\n              \"username\": _this.props.user.login,\n              \"password\": _this.props.user.password,\n              \"mail\": _this.props.mailAddress,\n              \"roles\": {\n                \"idRole\": 7,\n                \"role\": \"UTILISATEUR\"\n              },\n              \"activities\": newActivities,\n              \"regions\": _this.props.userRegions\n            };\n            axios.put(urlAddActivity, newUser).then(function (res) {\n              return console.log();\n            });\n          } else {\n            alert(\"cette activité associée à ce niveau ne fait pas partie de votre liste d'activitées\");\n          }\n        }\n      }\n    };\n\n    _this.state = {\n      selectedRegion: ''\n    };\n    return _this;\n  }\n\n  _createClass(RegionList, [{\n    key: \"handleChangeSelectedRegion\",\n    value: function handleChangeSelectedRegion(event) {\n      this.setState({\n        selectedRegion: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Liste des r\\xE9gions\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.displayUserRegions()), React.createElement(\"select\", {\n        onChange: this.handleChangeSelectedActivity.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), this.displayAllRegions()), React.createElement(\"button\", {\n        onClick: this.removeRegionToList.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"-\"), React.createElement(\"button\", {\n        onClick: this.addRegionToList.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"+\"));\n    }\n  }]);\n\n  return RegionList;\n}(React.Component);\n\nvar ConnectedRegionList = connect(mapStateToProps, mapDispatchToProps)(RegionList);\nexport { ConnectedRegionList };","map":{"version":3,"sources":["/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/src/components/regionList.js"],"names":["React","connect","addUserRegion","getUserRegions","mapDispatchToProps","dispatch","region","regions","mapStateToProps","state","id","user","mailAddress","userRegions","regionList","allRegions","availableRegions","userActivities","activityList","RegionList","props","displayUserRegions","Data","MakeItem","X","city","map","displayAllRegions","removeRegionToList","i","length","name","selectedRegion","boolContain","newActivities","j","JSON","stringify","allActivities","push","getUserActivities","urlAddActivity","newUser","login","password","axios","put","then","res","console","log","alert","event","setState","target","value","handleChangeSelectedActivity","bind","addRegionToList","Component","ConnectedRegionList"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { addUserRegion, getUserRegions } from '../actions/actions'\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addUserRegion: region => dispatch(addUserRegion(region)),\n        getUserRegions : regions => dispatch(getUserRegions(regions))\n    };\n  };\n\nconst mapStateToProps = (state) => {\n    return {\n        id: state.id,\n        user: state.user,\n        mailAddress: state.mailAddress,\n        userRegions: state.regionList,\n        allRegions: state.availableRegions,\n        userActivities: state.activityList\n    }\n}\n\nclass RegionList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { selectedRegion: '' };\n    }\n\n    handleChangeSelectedRegion(event) {\n        this.setState({selectedRegion: event.target.value});\n    }\n\n    displayUserRegions = () => {\n        var Data = this.props.userRegions, MakeItem = function(X) {\n            return <li key={X.city}>{X.city}</li>\n        };\n        return Data.map(MakeItem);\n    }\n\n    displayAllRegions = () => {\n        var Data = this.props.allRegions, MakeItem = function(X) {\n              return <option key={X.city}>{X.city}</option>\n        };\n        return Data.map(MakeItem);\n    }\n\n    removeRegionToList = () => {\n        for(let i=0;i<this.props.allRegions.length;i++){\n            if(this.props.allRegions[i].name===this.state.selectedRegion){\n                let boolContain=false;\n                let newActivities = [];//on construit la nouvelle liste d'activitées de l'utilisateur\n                for(let j=0;j<this.props.userActivities.length;j++){\n                    //vérifie si l'activité sélectionnée appartient à la liste de l'utilisateur\n                    if(JSON.stringify(this.props.userActivities[j])===JSON.stringify(this.props.allActivities[i])){\n                        boolContain=true;\n                    }else{\n                        newActivities.push(this.props.userActivities[j]);\n                    }\n                }\n                if(boolContain){\n                    this.props.getUserActivities(newActivities)\n\n                    let urlAddActivity = 'http://localhost:8080/user/update/'+this.props.id;\n                    let newUser = { \"username\": this.props.user.login,\n                      \"password\": this.props.user.password,\n                      \"mail\": this.props.mailAddress,\n                      \"roles\": {\"idRole\":7,\"role\":\"UTILISATEUR\"},\n                      \"activities\": newActivities,\n                      \"regions\": this.props.userRegions\n                    }\n                    axios.put(urlAddActivity, newUser).then(res => console.log());\n                }else{\n                    alert(\"cette activité associée à ce niveau ne fait pas partie de votre liste d'activitées\");\n                }\n            }\n        }\n    }\n\n    render() {\n        return <div>\n            <h3>Liste des régions</h3>\n            <ul>{this.displayUserRegions()}</ul>\n            <select onChange={this.handleChangeSelectedActivity.bind(this)}><option></option>{this.displayAllRegions()}</select>\n            <button onClick={this.removeRegionToList.bind(this)}>-</button>\n            <button onClick={this.addRegionToList.bind(this)}>+</button>\n            </div>\n    }\n}\n\nconst ConnectedRegionList = connect(mapStateToProps, mapDispatchToProps)(RegionList);\n\nexport {\n    ConnectedRegionList\n}"]},"metadata":{},"sourceType":"module"}