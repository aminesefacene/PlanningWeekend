{"ast":null,"code":"import _classCallCheck from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/src/components/activityList.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { getUserActivities } from '../actions/actions';\nimport { User } from '../user';\n\nvar axios = require('axios');\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    activities: state.activityList\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    connectUser: function (_connectUser) {\n      function connectUser(_x) {\n        return _connectUser.apply(this, arguments);\n      }\n\n      connectUser.toString = function () {\n        return _connectUser.toString();\n      };\n\n      return connectUser;\n    }(function (user) {\n      return dispatch(connectUser(user));\n    })\n  };\n};\n\nvar ActivityList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ActivityList, _React$Component);\n\n  function ActivityList(props) {\n    var _this;\n\n    _classCallCheck(this, ActivityList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ActivityList).call(this, props));\n\n    _this.getListActivities = function () {\n      var url = 'http://localhost:8080/user/getUser/5';\n      var res = axios.get(url).then(function (response) {\n        return _this.setState({\n          activities: response.data\n        });\n      });\n      console.log(res);\n    };\n\n    _this.renderListActivities = function () {\n      _this.getListActivities();\n\n      var Data = _this.state.activities,\n          MakeItem = function MakeItem(X) {\n        return React.createElement(\"li\", {\n          key: X.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, X.name);\n      };\n\n      return Data.map(MakeItem);\n    };\n\n    _this.state = {\n      activities: undefined\n    };\n    return _this;\n  }\n\n  _createClass(ActivityList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.renderListActivities());\n    }\n  }]);\n\n  return ActivityList;\n}(React.Component);\n\nvar ConnectedActivityList = connect(mapStateToProps, mapDispatchToProps)(ActivityList);\nexport { ConnectedActivityList };","map":{"version":3,"sources":["/home/miola/eclipse-workspace/PlanningWeekend/plannificationweekendapp/src/components/activityList.js"],"names":["React","connect","getUserActivities","User","axios","require","mapStateToProps","state","activities","activityList","mapDispatchToProps","dispatch","connectUser","user","ActivityList","props","getListActivities","url","res","get","then","response","setState","data","console","log","renderListActivities","Data","MakeItem","X","name","map","undefined","Component","ConnectedActivityList"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,IAAT,QAAqB,SAArB;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACLC,IAAAA,UAAU,EAAED,KAAK,CAACE;AADb,GAAP;AAGH,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACLC,IAAAA,WAAW;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAAE,UAAAC,IAAI;AAAA,aAAIF,QAAQ,CAACC,WAAW,CAACC,IAAD,CAAZ,CAAZ;AAAA,KAAN;AADN,GAAP;AAGD,CAJH;;IAMMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;;AADiB,UAKnBC,iBALmB,GAKC,YAAM;AACtB,UAAIC,GAAG,GAAG,sCAAV;AACA,UAAIC,GAAG,GAAGd,KAAK,CAACe,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAoB,UAAAC,QAAQ;AAAA,eAAI,MAAKC,QAAL,CAAc;AAACd,UAAAA,UAAU,EAAEa,QAAQ,CAACE;AAAtB,SAAd,CAAJ;AAAA,OAA5B,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH,KATkB;;AAAA,UAWnBQ,oBAXmB,GAWI,YAAM;AACzB,YAAKV,iBAAL;;AACA,UAAIW,IAAI,GAAG,MAAKpB,KAAL,CAAWC,UAAtB;AAAA,UAAkCoB,QAAQ,GAAG,SAAXA,QAAW,CAASC,CAAT,EAAY;AACrD,eAAO;AAAI,UAAA,GAAG,EAAEA,CAAC,CAACC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkBD,CAAC,CAACC,IAApB,CAAP;AACH,OAFD;;AAGA,aAAOH,IAAI,CAACI,GAAL,CAASH,QAAT,CAAP;AACH,KAjBkB;;AAEjB,UAAKrB,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAEwB;AAAd,KAAb;AAFiB;AAGlB;;;;6BAgBQ;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKN,oBAAL,EAAL,CAAP;AACH;;;;EAtBsB1B,KAAK,CAACiC,S;;AAyBjC,IAAMC,qBAAqB,GAAGjC,OAAO,CAACK,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CI,YAA7C,CAA9B;AAEA,SACIoB,qBADJ","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { getUserActivities } from '../actions/actions'\nimport { User } from '../user'\nconst axios = require('axios');\n\nconst mapStateToProps = (state) => {\n    return {\n      activities: state.activityList\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      connectUser: user => dispatch(connectUser(user))\n    };\n  };\n\nclass ActivityList extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { activities: undefined };\n    }\n\n    getListActivities = () => {\n        let url = 'http://localhost:8080/user/getUser/5';\n        let res = axios.get(url).then(response => this.setState({activities: response.data}));\n        console.log(res);\n    }\n\n    renderListActivities = () => {\n        this.getListActivities()\n        let Data = this.state.activities, MakeItem = function(X) {\n            return <li key={X.name}>{X.name}</li>\n        };\n        return Data.map(MakeItem);\n    }\n\n    render() {\n        return <ul>{this.renderListActivities()}</ul>\n    }\n}\n\nconst ConnectedActivityList = connect(mapStateToProps, mapDispatchToProps)(ActivityList);\n\nexport {\n    ConnectedActivityList\n}"]},"metadata":{},"sourceType":"module"}